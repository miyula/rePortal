<?php

/**
 * @file
 * Provide functions for manage project user
 */
define('PROJECT_NORMAL_USER', 'normal');
define('PROJECT_RESEARCHER', 'researcher');

/**
 * Implementation of hook_menu().
 */
function reProjectUser_menu(){

    $menu['project/%/termofuse'] = array(
        'title'             => t('Term of use'),
        'description'       => t('Display the term of use page for project'),
        'page callback'     => 'project_termofuse_callback',
        'page arguments'    => array(1, 3),
        'access arguments'  => array('access content'),
        'file'              => 'includes/join.guide.pages.inc',
        'type'              => MENU_CALLBACK,
    );
    
    $menu['project/%/manage/contents/termofuse'] = array(
        'title'             => t('Edit term of use'),
        'page callback'     => 'project_manage_content_termofuse_callback',
        'page arguments'    => array(1),
        'access arguments'  => array('access content'),
        'file'              => 'includes/manage.contents.pages.inc',
        'type'              => MENU_CALLBACK,
    );
    
    $menu['project/%/manage/persons'] = array(
	'title arguments'   => array(1),
	'title callback'    => 'project_title_callback',
        'description'       => t('Display list of the project'),
        'page callback'     => 'project_manage_persons_list_callback',
        'page arguments'    => array(1),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.pages.inc',  
    );
    $menu['project/%/manage/persons/researcher/add'] = array(
	'title arguments'   => array(1),
	'title callback'    => 'project_title_callback',
        'description'       => t('Add new researcher'),
        'page callback'     => 'project_manage_persons_researcher_add_callback',
        'page arguments'    => array(1),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.researcher.pages.inc',  
    );
    $menu['project/%/manage/persons/researcher/remove/%'] = array(
	'title arguments'   => array(1),
	'title callback'    => 'project_title_callback',
        'description'       => t('Remove researcher'),
        'page callback'     => 'project_manage_persons_researcher_remove_callback',
        'page arguments'    => array(1, 6),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.researcher.pages.inc',  
    );
    $menu['project/%/manage/persons/normal/add'] = array(
	'title arguments'   => array(1),
	'title callback'    => 'project_title_callback',
        'description'       => t('Invite participants'),
        'page callback'     => 'project_manage_persons_normal_add_callback',
        'page arguments'    => array(1),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.pages.inc',  
    );
    $menu['project/%/manage/persons/participant/remove/%'] = array(
        'title arguments'   => array(1),
	'title callback'    => 'project_title_callback',
        'description'       => t('Invite participants'),
        'page callback'     => 'project_manage_persons_participant_remove_callback',
        'page arguments'    => array(1, 6),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.participant.pages.inc',  
    );
    $menu['project/%/manage/persons/participant/edit/%'] = array(
        'title'             => t('Edit participant'),
        'description'       => t('Edit participant information'),
        'page callback'     => 'project_manage_persons_participant_edit_callback',
        'page arguments'    => array(1, 6),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.participant.pages.inc',  
    );
    
    /** participant tags **/
    $menu['project/%/manage/persons/tagsget/%'] = array(
        'title'		    => t('Get tags'),
        'description'       => t('Ajax request for get participant tags'),
        'page callback'     => 'ajax_get_participant_tags_callback',
        'page arguments'    => array(1, 5),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.participant.tags.inc',
    );
    $menu['project/%/manage/persons/tagsadd/%/%'] = array(
        'title'		    => t('Get tags'),
        'description'       => t('Ajax request for add participant tag'),
        'page callback'     => 'ajax_add_participant_tag_callback',
        'page arguments'    => array(1, 5, 6),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.participant.tags.inc',
    );
    $menu['project/%/manage/persons/tagsremove/%/%'] = array(
        'title'		    => t('Get tags'),
        'description'       => t('Ajax request for remove participant tag'),
        'page callback'     => 'ajax_remove_participant_tag_callback',
        'page arguments'    => array(1, 5, 6),
	'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'file'              => 'includes/manage.participant.tags.inc',
    );
    return $menu;
}

/**
 * Implements hook_theme().
 */
function reProjectUser_theme(){
    return array(
	'project_termofuse_page' => array(
	    'template' => 'templates/termofuse.page',
	    'arguments' => array(
		'project' => NULL,
	    ),
	),
        'participants_tags_div' => array(
            'template' => 'templates/edit_tags.div',
            'arguments' => array(
                'tags'  => NULL,
                'project' => NULL,
            )
        ),
	'participants_card_div' => array(
	    'template' => 'templates/participant_card.div',
            'arguments' => array(
                'row'  => NULL,
            )
	),
    );
}

/**
 * Implements hook_project_manage_navigation().
 */
function reProjectUser_project_manage_navigation($project){
    //return manage navigation menus
    $navigation[] = array(
        'title' => 'Persons manage',
        'url'   => 'project/'.$project->path.'/manage/persons',
        'weight'=> 0,
    );
    return $navigation;
}

/**
 * add user to the project
 */
function add_user_to_project($pid, $uid, $role=PROJECT_NORMAL_USER){
    //check if user already in project
    $check = 'SELECT COUNT(*) FROM {research_projects_persons_list} WHERE project=%d AND user=%d AND role="%s"';
    if(!db_result(db_query($check, $pid, $uid, $role))){
        //insert new
        $insert = 'INSERT INTO {research_projects_persons_list}(project, user, role, created, changed) VALUES(%d, %d, "%s", NOW(), NOW())';
        return db_query($insert, $pid, $uid, $role);
    }
    return FALSE;
}

/**
 * load term of use node
 */
function load_term_of_use_node($project){
    //get term of use node
    $sql = 'SELECT node FROM {research_projects_contents} WHERE project=%d AND type="termofuse" ORDER BY created DESC LIMIT 1 ';
    $nid = db_result(db_query($sql, $project->id));
    if($nid>0){
        return node_load($nid);
    }else{
        //create new term of use page
        $node = new stdClass;
        $node->title = 'Term of use';
        $node->body = '<a href="'.url('project/'.$project->path.'/manage/contents/termofuse').'" class="edit-link">Click here to first edit.</a>';
        $node->type = 'projectcontent';
        node_save($node);
        project_add_content($project->id, $node->nid, 'termofuse', FALSE);
        return $node;
    }
}

function load_first_guide_node($project){
    //get term of use node
    $sql = 'SELECT node FROM {research_projects_contents} WHERE project=%d AND type="firstguide" ORDER BY created DESC LIMIT 1 ';
    $nid = db_result(db_query($sql, $project->id));
    if($nid>0){
        return node_load($nid);
    }else{
        //create new term of use page
        $node = new stdClass;
        $node->title = 'First Guide';
        $node->body = '<a href="'.url('project/'.$project->path.'/manage/contents').'" class="edit-link">Click here to first edit.</a>';
        $node->type = 'projectcontent';
        node_save($node);
        project_add_content($project->id, $node->nid, 'firstguide', FALSE);
        return $node;
    }
}


/**
 * Split tags into array
 * @param
 *   $tags_str, string
 */
function get_tags_as_array($tags_str){
    $tags = array();
    $token = strtok($tags_str,';');
    while ($token !== false){
	if(!empty($token)){
	    $tags[] = trim($token);
	}
	$token = strtok(';');
    }
    return $tags;
}

/**
 * fetch all participants tags from a project
 * @param
 *   $pid, the id of the project
 */
function get_project_all_participants_tags($pid){
    $sql = 'SELECT id, tag FROM {research_projects_participants_tags} WHERE project=%d';
    $res = db_query($sql, $pid);
    $tags = array();
    while($row=db_fetch_array($res)){
	$tags[] = $row;
    }
    return $tags;
}

/**
 * fetch a participant's all tags
 * @param
 *   $id, the id of participants
 * @param
 *   $pid, the id of project
 */
function get_participant_all_tags($id, $pid){
    $sql = 'SELECT tags FROM {research_projects_participants_cards} WHERE id=%d AND project=%d';
    $tags_str = db_result(db_query($sql, $id, $pid));
    return get_tags_as_array($tags_str);
}

/**
 * Add tag to project
 * @param
 *   $pid, the id of project
 * @param
 *   $tag, string
 */
function add_tag_to_project($pid, $tag){
    //check if tag already in project
    $check = 'SELECT COUNT(*) FROM {research_projects_participants_tags} WHERE project=%d AND tag="%s"';
    if(db_result(db_query($check, $pid, $tag))>0){
	//tag exist
	return $tag;
    }
    
    //add new tag
    $add = 'INSERT INTO {research_projects_participants_tags}(project, tag, created, changed) VALUES(%d, "%s", NOW(), NOW())';
    if(db_query($add, $pid, $tag)){
	return $tag;
    }
    return FALSE;
}

/**
 * Remove tag from project
 * @param
 *   $pid, the id of project
 * @param
 *   $tag, string
 */
function remove_tag_from_project($pid, $tag){
    
}

/**
 * Add tag to participant card
 * @param
 *   $pid, the id of project
 * @param
 *   $id, the id of participant
 * @param
 *   $tag, string
 */
function add_tag_to_participant($pid, $id, $tag){
    //add tag to project if it is new
    add_tag_to_project($pid, $tag);
    
    //get tags
    $get = 'SELECT tags FROM {research_projects_participants_cards} WHERE id=%d AND project=%d';
    $tags = db_result(db_query($get, $id, $pid));
    if(empty($tags)){
	$tags = ';' . $tag . ';';
    }else{
	if(!check_tag_in_participant($tags, $tag)){
	    $tags.= ';' . $tag . ';';
	}
    }
    //update table
    $update = '{UPDATE {research_projects_participants_cards} SET tags="%s" WHERE id=%d AND project=%d';
    return db_query($update, $tags, $id, $pid);
}

/**
 * Find if tag already in participant card
 */
function check_tag_in_participant($tags, $tag){
    return (strstr($tags, ';'.$tag.';'));
}